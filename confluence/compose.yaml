services:
  loadbalancer:
    build:
      context: .
      dockerfile: haproxy.Dockerfile
      args:
        HAPROXY_IMAGE: ${HAPROXY_IMAGE}
    container_name: confluence_loadbalancer
    sysctls:
      - net.ipv4.ip_unprivileged_port_start=0
    ports:
      - 8090:80
      - 9090:9090
    networks:
      cluster:
        aliases:
          - localhost
        ipv4_address: 172.28.0.2
    depends_on:
      - node1
      - node2
# Uncomment following lines and other parts in this file to run more than 3 nodes
# Do not forget to uncomment lines in haproxy.cfg as well
#      - node3
#      - node4
  database:
    image: ${POSTGRES_IMAGE}
    container_name: confluence_database
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=confluence
      - POSTGRES_USER=confluence
      - POSTGRES_DB=confluence
      - PGDATA=/var/lib/postgresql/data
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      # https://stackoverflow.com/questions/46516584/docker-check-if-postgres-is-ready
      test: ["CMD", "/usr/bin/pg_isready"]
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      cluster:
        ipv4_address: 172.28.0.3
  pgadmin:
    image: ${PGADMIN_IMAGE}
    container_name: confluence_pgadmin
    ports:
      - 5050:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=confluence@example.com
      - PGADMIN_DEFAULT_PASSWORD=confluence
      - PGADMIN_LISTEN_PORT=80
    networks:
      cluster:
        ipv4_address: 172.28.0.4
  node1:
    build:
      context: .
      dockerfile: confluence.Dockerfile
      args:
        CONFLUENCE_IMAGE: ${CONFLUENCE_IMAGE}
    container_name: confluence_node1
    ports:
      - 8190:8090
      - 8191:8091
    environment:
      # Setup for debugger
      # - JVM_SUPPORT_RECOMMENDED_ARGS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000 -Dupm.plugin.upload.enabled=true"
      - JVM_SUPPORT_RECOMMENDED_ARGS="-Dupm.plugin.upload.enabled=true"
      # Reverse Proxy Settings
      - ATL_PROXY_NAME=localhost
      - ATL_PROXY_PORT=8090
      # Database
      - ATL_JDBC_URL=jdbc:postgresql://database:5432/confluence
      - ATL_JDBC_USER=confluence
      - ATL_JDBC_PASSWORD=confluence
      - ATL_DB_DRIVER=org.postgresql.Driver
      - ATL_DB_TYPE=postgresql
      # Data Center configuration
      - ATL_CLUSTER_TYPE=tcp_ip
      - ATL_CLUSTER_NAME=confluence_cluster
      - ATL_CLUSTER_PEERS=172.28.0.5,172.28.0.6
      - ATL_FORCE_CFG_UPDATE=true
      # Home Directories
      - CONFLUENCE_HOME=/var/atlassian/application-data/confluence
      - ATL_PRODUCT_HOME_SHARED=/var/atlassian/application-data/shared
    volumes:
      - node1:/var/atlassian/application-data/confluence
      - shared:/var/atlassian/application-data/shared
    depends_on:
      database:
        condition: service_healthy
    networks:
      cluster:
        ipv4_address: 172.28.0.5
  node2:
    build:
      context: .
      dockerfile: confluence.Dockerfile
      args:
        CONFLUENCE_IMAGE: ${CONFLUENCE_IMAGE}
    container_name: confluence_node2
    ports:
      - 8290:8090
      - 8291:8091
    environment:
      # Setup for debugger
      # - JVM_SUPPORT_RECOMMENDED_ARGS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000 -Dupm.plugin.upload.enabled=true"
      - JVM_SUPPORT_RECOMMENDED_ARGS="-Dupm.plugin.upload.enabled=true"
      # Reverse Proxy Settings
      - ATL_PROXY_NAME=localhost
      - ATL_PROXY_PORT=8090
      # Database
      - ATL_JDBC_URL=jdbc:postgresql://database:5432/confluence
      - ATL_JDBC_USER=confluence
      - ATL_JDBC_PASSWORD=confluence
      - ATL_DB_DRIVER=org.postgresql.Driver
      - ATL_DB_TYPE=postgresql
      # Data Center configuration
      - ATL_CLUSTER_TYPE=tcp_ip
      - ATL_CLUSTER_NAME=confluence_cluster
      - ATL_CLUSTER_PEERS=172.28.0.5,172.28.0.6
      - ATL_FORCE_CFG_UPDATE=true
      # Home Directories
      - CONFLUENCE_HOME=/var/atlassian/application-data/confluence
      - ATL_PRODUCT_HOME_SHARED=/var/atlassian/application-data/shared
    volumes:
      - node2:/var/atlassian/application-data/confluence
      - shared:/var/atlassian/application-data/shared
    depends_on:
      database:
        condition: service_healthy
    networks:
      cluster:
        ipv4_address: 172.28.0.6
volumes:
  database:
  node1:
  node2:
#  node3:
#  node4:
  shared:
networks:
  cluster:
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1
